{% set name = "Flask-Session" %}
{% set version = "0.8.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name|lower|replace('-', '_') }}-{{ version }}.tar.gz
    sha256: 20e045eb01103694e70be4a49f3a80dbb1b57296a22dc6f44bbf3f83ef0742ff
  - url: https://github.com/pallets-eco/{{ name|lower }}/archive/refs/tags/{{ version }}.tar.gz
    sha256: 017c852d3df6b8492666b5e3544bb4f283a49ca357fac28af465b8cb8017f1e4
    folder: gh

build:
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0
  skip: true  # [py<38]

requirements:
  host:
    - python
    - pip
    - flit-core <4
  run:
    - python
    - cachelib >=0.10.2
    - flask >=2.2
    - msgspec >=0.18.6
  run_constrained:
    - pymongo >=4.6.2
    - redis-py >=5.0.3
    - flask-sqlalchemy >=3.0.5

# E   ModuleNotFoundError: No module named 'mypy_boto3_dynamodb'
{% set ignore_tests = " --ignore=gh/tests/test_dynamodb.py" %}
# E   ModuleNotFoundError: No module named 'pymemcache'
{% set ignore_tests = ignore_tests + " --ignore=gh/tests/test_memcached.py" %}
# redis.exceptions.ConnectionError: Error 61 connecting to localhost:6379. Connection refused.
{% set tests_to_skip = "test_redis_default" %}
# pymongo.errors.ServerSelectionTimeoutError: localhost:27017: [Errno 61] Connection refused
{% set tests_to_skip = tests_to_skip + " or test_mongo_default" %}

test:
  source_files:
    - gh/tests
  imports:
    - flask_session
    - flask_session.cachelib
    - flask_session.defaults
    - flask_session.filesystem
    - flask_session.memcached
    - flask_session.mongodb
    - flask_session.redis
    - flask_session.sqlalchemy
  requires:
    - pip
    - pytest
    - boto
    - pymongo
    - redis
    - flask-sqlalchemy
    - pytest-cov
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - pytest -v gh/tests --cov=. --cov-config=.coveragerc {{ ignore_tests }} -k "not({{ tests_to_skip }})"

about:
  home: https://github.com/pallets-eco/flask-session
  summary: Flask-Session is an extension for Flask that adds support for server-side sessions to your application.
  description: Flask-Session is an extension for Flask that adds support for server-side sessions to your application.
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.rst
  doc_url: https://flask-session.readthedocs.io
  dev_url: https://github.com/pallets-eco/flask-session

extra:
  recipe-maintainers:
    - xylar
